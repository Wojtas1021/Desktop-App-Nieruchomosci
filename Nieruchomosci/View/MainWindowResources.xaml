<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Nieruchomosci.ViewModel"
                    xmlns:vw="clr-namespace:Nieruchomosci.View"
                    >

    <DataTemplate DataType="{x:Type vm:NowaUslugaViewModel}">
        <vw:NowaUslugaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyWlascicieleViewModel}">
        <vw:WszyscyWlascicieleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieUslugiViewModel}">
        <vw:WszystkieUslugiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:StawkiVatViewModel}">
        <vw:StawkiVatView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieRachunkiBankoweViewModel}">
        <vw:WszystkieRachunkiBankoweView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:JednostkiMiaryViewModel}">
        <vw:JednostkiMiaryView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyAdresViewModel}">
        <vw:NowyAdresView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaUchwalaViewModel}">
        <vw:NowaUchwalaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DodajNajemceViewModel}">
        <vw:DodajNajemceView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:DodajWlascicielaViewModel}">
        <vw:DodajWlascicielaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WpisDoWykazuViewModel}">
        <vw:WpisDoWykazuView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <vw:NowyKontrahentView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaWspolnotaViewModel}">
        <vw:NowaWspolnotaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyBudynekViewModel}">
        <vw:NowyBudynekView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <vw:WszyscyKontrahenciView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieBudynkiViewModel}">
        <vw:WszystkieBudynkiView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieLokaleViewModel}">
        <vw:WszystkieLokaleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieOplatyViewModel}">
        <vw:WszystkieOplatyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieWspolnotyViewModel}">
        <vw:WszystkieWspolnotyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:RaportUslugiViewModel}">
        <vw:RaportUslugi/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszystkieAdresyViewModel}">
        <vw:WszystkieAdresyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:CzynszeViewModel}">
        <vw:CzynszeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:RaportBilansViewModel}">
        <vw:RaportBilansView/>
    </DataTemplate>

    <!--ToolBar-->
    <Style x:Key="ToolbarStandard" TargetType="{x:Type ToolBar}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="FloralWhite"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>

    <!--Grid-->
    <Style x:Key="GridStandardowy" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="FloralWhite"/>
    </Style>
    <!--Grid Zakładki-->
    <Style x:Key="GridZakladki" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
    </Style>

    <!--Grid Zakładki-->
    <Style x:Key="statusBarStandard" TargetType="{x:Type StatusBar}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>

    <!--ProgresBar-->
    <Style x:Key="ProgresBarStandard" TargetType="{x:Type ProgressBar}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>

    <!--Menu-->
    <Style x:Key="MenuStandard" TargetType="{x:Type Menu}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Background" Value="FloralWhite"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>

    <!--Button-->
    <Style x:Key="ButtonStandardowy" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--ButtonFaktura-->
    <Style x:Key="ButtonMedium" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--Button uchwała-->
    <Style x:Key="ButtonUchwala" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--Button szeroki-->
    <Style x:Key="Button" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--ColumnDefinition-->
    <Style x:Key="ColumnSeparacyjnaStandardowa" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="5"/>
    </Style>
    <Style x:Key="ColumnSeparacyjnaDuza" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="20"/>
    </Style>

    <!--ComboBox-->
    <Style x:Key="ComboBoxStandardowy" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>
    <Style x:Key="ComboBoxMaly" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--ComboBox Uchwała-->
    <Style x:Key="ComboBoxUchwała" TargetType="{x:Type ComboBox}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--ComboBox Czcionka-->
    <Style x:Key="ComboBoxCzcionka" TargetType="{x:Type ComboBox}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--CheckBox-->
    <Style x:Key="CheckBoxStandardowy" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!--Label-->
    <Style x:Key="LabelStandardowy" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>
    <!--Label-->
    <Style x:Key="LabelLewy" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!--Label Uchwała-->
    <Style x:Key="LabelUchwała" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!--TextBox-->
    <Style x:Key="TextBoxStandardowy" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBoxNormalny" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--TextBox Szeroki-->
    <Style x:Key="TextBoxSzeroki" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--TextBox krótki-->
    <Style x:Key="TextBoxKrotki" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--TextBox Treść-->
    <Style x:Key="TextBoxTresc" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--ListBox-->
    <Style x:Key="ListBoxStandardowy" TargetType="{x:Type ListBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="2,6"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>
    <Style x:Key="ListBoxSzeroki" BasedOn="{StaticResource ListBoxStandardowy}" TargetType="{x:Type ListBox}">
        <Setter Property="Width" Value="250"/>
    </Style>
    <Style x:Key="ListBoxMedium" TargetType="{x:Type ListBox}">
        <Setter Property="Height" Value="25"/>
    </Style>
    <Style x:Key="ListBoxMediumSzeroki" BasedOn="{StaticResource ListBoxMedium}" TargetType="{x:Type ListBox}">
        <Setter Property="Width" Value="150"/>
    </Style>

    <!--Expander-->
    <Style x:Key="ExpanderRozwiniety" TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
    </Style>

    <!--StackPanel-->
    <Style x:Key="StackPanelStandardowy" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--StackPanel-->
    <Style x:Key="StackPanelBoczny" BasedOn="{StaticResource StackPanelStandardowy}" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="StackPanelPoziomy" BasedOn="{StaticResource StackPanelStandardowy}" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <!--DatePicker-->
    <Style x:Key="DatePickerStandardowy" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="DatePickerSzeroki" BasedOn="{StaticResource DatePickerStandardowy}" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="250"/>
    </Style>

    <!--DataGrid-->
    <Style x:Key="DataGridStandardowy" TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!--ToolBar-->
    <Style x:Key="ToolBarStandardowy" TargetType="{x:Type ToolBar}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#eee"/>
    </Style>

    <!--Toggle Button-->
    <Style x:Key="ToggleButtonStandardowy" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
    </Style>
    <Style x:Key="ToggleButtonToolBar" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="30"/>
    </Style>
    <Style x:Key="ToggleButtonToolBarMedium" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
    </Style>
    <Style x:Key="ToggleButtonToolBarMedium2" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
    </Style>
    <Style x:Key="ToggleButtonToolBarDuzy" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="42"/>
        <Setter Property="Width" Value="50"/>
    </Style>
    <Style x:Key="ToggleButtonToolBarDuzy2" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="40"/>
    </Style>

    <!--RichTextBox-->
    <Style x:Key="RichTextBoxStandardowy" TargetType="{x:Type RichTextBox}">
        <Setter Property="Height" Value="100"/>
    </Style>
    <Style x:Key="RichTextBoxDuzy" TargetType="{x:Type RichTextBox}">
        <Setter Property="Height" Value="150"/>
        <Setter Property="Width" Value="970"/>
    </Style>
    <Style x:Key="RichTextBoxWysoki" TargetType="{x:Type RichTextBox}">
        <Setter Property="Height" Value="200"/>
    </Style>

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="WhiteSmoke"
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="DarkSlateGray"
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

</ResourceDictionary>